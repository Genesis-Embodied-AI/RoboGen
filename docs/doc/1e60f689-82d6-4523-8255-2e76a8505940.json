{
    "summary": "The script installs ROS dependencies, libraries, and Python packages before optionally installing OMPL on Ubuntu systems.",
    "details": [
        {
            "comment": "This script installs dependencies for Robot Operating System (ROS) with ubuntu_version, common dependencies via apt-get and python binding dependencies. It sets C++ compiler to g++ and installs libraries built with it, ensures noninteractive debian frontend, and uses sudo if not root. It updates and upgrades, then installs various boost libraries, Eigen3, ODE, YAML-cpp, python's dev and pip for specified Python version.",
            "location": "\"/media/root/Prima/works/RoboGen/docs/src/install_ompl_1.5.2.sh\":0-30",
            "content": "#!/bin/bash\nset -e\nif [ `id -u` == 0 ]; then\n    SUDO=\n    export DEBIAN_FRONTEND=noninteractive\n    apt-get -y install lsb-release\nelse\n    SUDO=\"sudo -H\"\nfi\nubuntu_version=`lsb_release -rs | sed 's/\\.//'`\ninstall_common_dependencies()\n{\n    # install most dependencies via apt-get\n    ${SUDO} apt-get -y update\n    ${SUDO} apt-get -y upgrade\n    # We explicitly set the C++ compiler to g++, the default GNU g++ compiler. This is\n    # needed because we depend on system-installed libraries built with g++ and linked\n    # against libstdc++. In case `c++` corresponds to `clang++`, code will not build, even\n    # if we would pass the flag `-stdlib=libstdc++` to `clang++`.\n    ${SUDO} apt-get -y install g++ cmake pkg-config libboost-serialization-dev libboost-filesystem-dev libboost-system-dev libboost-program-options-dev libboost-test-dev libeigen3-dev libode-dev wget libyaml-cpp-dev\n    export CXX=g++\n    export MAKEFLAGS=\"-j `nproc`\"\n}\ninstall_python_binding_dependencies()\n{\n    ${SUDO} apt-get -y install python${PYTHONV}-dev python${PYTHONV}-pip"
        },
        {
            "comment": "Installs additional Python dependencies with pip, installs CastXML, sets path for CastXML, installs Boost Python dev package, installs PyQt5.qtopengl and Freeglut3-dev libraries, installs Assimp library, installs Flask and Celery packages, installs CCD development library.",
            "location": "\"/media/root/Prima/works/RoboGen/docs/src/install_ompl_1.5.2.sh\":31-53",
            "content": "    # install additional python dependencies via pip\n    #${SUDO} pip${PYTHONV} install -vU https://github.com/CastXML/pygccxml/archive/develop.zip pyplusplus\n    #${SUDO} pip${PYTHONV} install -vU pygccxml-develop.zip pyplusplus\n    ${SUDO} pip${PYTHONV} install -vU pygccxml pyplusplus\n    # install castxml\n    if [[ $ubuntu_version > 1910 ]]; then\n        ${SUDO} apt-get -y install castxml\n    else\n        wget -q -O- https://data.kitware.com/api/v1/file/5e8b740d2660cbefba944189/download | tar zxf castxml-linux.tar.gz -C ${HOME}\n        export PATH=${HOME}/castxml/bin:${PATH}\n    fi\n    ${SUDO} apt-get -y install libboost-python-dev\n    if [[ $ubuntu_version > 1710 ]]; then\n        ${SUDO} apt-get -y install libboost-numpy-dev python${PYTHONV}-numpy\n    fi\n    if [[ $ubuntu_version > 1904 ]]; then\n        ${SUDO} apt-get -y install pypy3\n    fi\n}\ninstall_app_dependencies()\n{\n    ${SUDO} apt-get -y install python${PYTHONV}-pyqt5.qtopengl freeglut3-dev libassimp-dev python${PYTHONV}-opengl python${PYTHONV}-flask python${PYTHONV}-celery libccd-dev"
        },
        {
            "comment": "Installing OMPL dependencies and libraries.\n\n- Installs Python dependency PyOpenGL-accelerate via pip.\n- Checks for required fcl package version and installs it if necessary.\n- Downloads the OMPL source code from GitHub or installs using apt-get.\n- Sets up the necessary environment for OMPL installation.",
            "location": "\"/media/root/Prima/works/RoboGen/docs/src/install_ompl_1.5.2.sh\":54-84",
            "content": "    # install additional python dependencies via pip\n    ${SUDO} pip${PYTHONV} install -vU PyOpenGL-accelerate\n    # install fcl\n    if ! pkg-config --atleast-version=0.5.0 fcl; then\n        if [[ $ubuntu_version > 1604 ]]; then\n            ${SUDO} apt-get -y install libfcl-dev\n        else\n            wget -O - https://github.com/flexible-collision-library/fcl/archive/0.6.1.tar.gz | tar zxf -\n            cd fcl-0.6.1; cmake .; ${SUDO} -E make install; cd ..\n        fi\n    fi\n}\ninstall_ompl()\n{\n    if [ -z $APP ]; then\n        OMPL=\"ompl\"\n    else\n        OMPL=\"omplapp\"\n    fi\n    if [ -z $GITHUB ]; then\n        if [ -z $APP]; then\n            wget --no-check-certificate -O - https://github.com/ompl/${OMPL}/archive/1.5.2.tar.gz | tar zxf -\n            cd ${OMPL}-1.5.2\n        else\n            wget -O - https://github.com/ompl/${OMPL}/releases/download/1.5.2/${OMPL}-1.5.2-Source.tar.gz | tar zxf -\n            cd $OMPL-1.5.2-Source\n        fi\n    else\n        ${SUDO} apt-get -y install git\n        git clone --recurse-submodules https://github.com/ompl/${OMPL}.git"
        },
        {
            "comment": "This code is a shell script for installing OMPL (Open Motion Planning Library) version 1.5.2. It checks if the Python binding generation can proceed, then compiles and installs OMPL with optional features such as Python bindings or generating an OMPL.app bundle. The latest commit from GitHub's master branch can also be installed using the script.",
            "location": "\"/media/root/Prima/works/RoboGen/docs/src/install_ompl_1.5.2.sh\":85-125",
            "content": "        cd $OMPL\n    fi\n    mkdir -p build/Release\n    cd build/Release\n    cmake ../.. -DPYTHON_EXEC=/usr/bin/python${PYTHONV}\n    if [ ! -z $PYTHON ]; then\n        # Check if the total memory is less than 6GB.\n        if [ `cat /proc/meminfo | head -1 | awk '{print $2}'` -lt 6291456 ]; then\n            echo \"Python binding generation is very memory intensive. At least 6GB of RAM is recommended.\"\n            echo \"Proceeding with binding generation using 1 core...\"\n            make -j 1 update_bindings\n        else\n            make update_bindings\n        fi\n    fi\n    make\n    ${SUDO} make install\n}\nfor i in \"$@\"\ndo\ncase $i in\n    -a|--app)\n        APP=1\n        PYTHON=1\n        shift\n        ;;\n    -p|--python)\n        PYTHON=1\n        shift\n        ;;\n    -g|--github)\n        GITHUB=1\n        shift\n        ;;\n    *)\n        # unknown option -> show help\n        echo \"Usage: `basename $0` [-p] [-a]\"\n        echo \"  -p: enable Python bindings\"\n        echo \"  -a: enable OMPL.app (implies '-p')\"\n        echo \"  -g: install latest commit from master branch on GitHub\""
        },
        {
            "comment": "This code is part of a script that installs the OMPL library. It checks the Ubuntu version, sets Python version to 3 if Ubuntu is above 17.04, installs common dependencies, optionally installs Python binding and app dependencies, and finally installs OMPL.",
            "location": "\"/media/root/Prima/works/RoboGen/docs/src/install_ompl_1.5.2.sh\":126-142",
            "content": "    ;;\nesac\ndone\n# the default version of Python in 17.10 and above is version 3\nif [[ $ubuntu_version > 1704 ]]; then\n    PYTHONV=3\nfi\ninstall_common_dependencies\nif [ ! -z $PYTHON ]; then\n    install_python_binding_dependencies\nfi\nif [ ! -z $APP ]; then\n    install_app_dependencies\nfi\ninstall_ompl"
        }
    ]
}