{
    "summary": "The code defines table paths, scales, and poses for manipulation tasks in a way that handles varying table sizes and positions, with manual tuning for now but potential future automation. It also addresses excessively large bounding boxes for specific table objects in PyBullet by applying scale-down factors differently for each object.",
    "details": [
        {
            "comment": "This code defines table paths, scales, and poses for manipulation tasks. The table paths are manually chosen but can be automatically selected in the future. The scales and poses are also manually tuned but can eventually be determined automatically as well. This allows the program to handle different tables with varying sizes and positions.",
            "location": "\"/media/root/Prima/works/RoboGen/docs/src/manipulation/table_utils.py\":0-29",
            "content": "### we manually chose 5 table from objaverse.\n### The table can be chosen automatically from objaverse in the future, just as like other objects.\nimport numpy as np\ntable_paths = [\n    \"table\", \n    \"table_1d43b7612af94e1183f00e604d9edf4a\", \n    \"table_9c060629c8a04b038f562977317f6cb1\", \n    \"table_57013651506042f885fad59a4e0994a9\",\n    \"table_fb0efe334cc046e383c0f21fc70ed82b\"\n]\n# this is manually tuned for now, but can be automatically determined, as like other objects. \ntable_scales = {\n    \"table\": 0.7,\n    \"table_1d43b7612af94e1183f00e604d9edf4a\": 2.5,\n    \"table_9c060629c8a04b038f562977317f6cb1\": 1.8,\n    \"table_57013651506042f885fad59a4e0994a9\": 1.9,\n    \"table_fb0efe334cc046e383c0f21fc70ed82b\": 0.8,\n}\ntable_poses = {\n    \"table\": [0, 0, 0],\n    \"table_1d43b7612af94e1183f00e604d9edf4a\": [0, 0, 0.195],\n    \"table_9c060629c8a04b038f562977317f6cb1\": [0, 0, 0.13],\n    \"table_57013651506042f885fad59a4e0994a9\": [0, 0, 0.2],\n    \"table_fb0efe334cc046e383c0f21fc70ed82b\": [0, 0, 0],\n}\n# this is to handle the case"
        },
        {
            "comment": "The code defines a dictionary, table_bbox_scale_down_factors, with factors to scale down bounding box values for specific table objects in PyBullet. This is done because the current implementation of PyBullet generates excessively large bounding boxes for these tables, likely due to outlier points in their mesh. The scale-down factors are applied differently for each table object.",
            "location": "\"/media/root/Prima/works/RoboGen/docs/src/manipulation/table_utils.py\":29-38",
            "content": " where pybullet gives very wrong bounding box for the table (much larger than the actual table size)\n# might be due to outlier points in the table mesh -- not sure how exactly pybullet processes the mesh to get the bounding box\n# interestlying this seems to be only happening for the tables, not other objects\ntable_bbox_scale_down_factors = {\n    \"table\": 0.1,\n    \"table_1d43b7612af94e1183f00e604d9edf4a\": 0.35,\n    \"table_9c060629c8a04b038f562977317f6cb1\": 0.35,\n    \"table_57013651506042f885fad59a4e0994a9\": 0.35,\n    \"table_fb0efe334cc046e383c0f21fc70ed82b\": 0.05,\n}"
        }
    ]
}